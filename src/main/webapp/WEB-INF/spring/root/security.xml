<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- 보안을 체크할 필요가 없는 경로 설정 -->
	<security:http pattern="/resources/**" security="none"/>
	
	<!-- 보안 필터 체인(프로세싱) 설정 -->
	<security:http>
		<!--  <security:intercept-url pattern="/exam08/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/exam08/user/**" access="hasRole('ROLE_USER')"/>-->
		
		
		<security:intercept-url pattern="/shopping_basket" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/pay" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/pay_success" access="hasRole('ROLE_MEMBER')"/>
		
		<security:intercept-url pattern="/mypage_memberInfo" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/mypage_orderlist" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/mypage_inquiry" access="hasRole('ROLE_MEMBER')"/>
		
		<security:intercept-url pattern="/palbang_create" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/palbang_update" access="hasRole('ROLE_MEMBER')"/>
		
		<security:intercept-url pattern="/likeUp" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/likeDown" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
	
		
		<!-- 로그인/로그아웃 설정 -->
		<security:form-login 
			login-page="/loginForm"
			login-processing-url="/login"
			username-parameter=" member_email"
			password-parameter="member_pw"
			authentication-success-handler-ref="authSuccessHandler"
			authentication-failure-handler-ref="authFailureHandler"/>
			
		<!-- <security:csrf disabled="true"/> -->		
		
		<!-- Post 방식으로 요청해야 함 -->
		<security:logout logout-url="/logout"/>
		
		<!-- 로그인 중복 처리 설정 -->
		<security:session-management>
			<!-- 기존 브라우저는 강제아웃, 다른 브라우저는 로그인 -->
			<security:concurrency-control max-sessions="1"
										  error-if-maximum-exceeded="false"
										  expired-url="/loginForm"/>
			<!-- 기존 브라우저는 로그인 유지, 다른 브라우저는 에러 메시지 출력 -->
			<!-- <security:concurrency-control max-sessions="1"
										  error-if-maximum-exceeded="true"/> -->
		</security:session-management>
		
		<!-- 403에러가 발생할 때 이동할 페이지 -->
		<security:access-denied-handler error-page="/auth/error403"/> 
	</security:http>
	
	<!-- 사용자 인증 처리를 위한 설정 (DB 테이블 관련) -->
	<security:authentication-manager>
		<security:authentication-provider ref="daoAuthenticationProvider" />

	</security:authentication-manager>
	
	<bean id="daoAuthenticationProvider" 
		  class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
	<property name="passwordEncoder" ref="bCryptPasswordEncoder"/>
	<property name="userDetailsService" ref="jdbcUserService"/>
	<property name="authoritiesMapper" ref="roleHierachyAuthoritiesMapper"/>
	</bean>
	
	<bean id="bCryptPasswordEncoder" 
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<security:jdbc-user-service id="jdbcUserService"
								data-source-ref="dataSource"
								users-by-username-query="select member_email, member_pw, member_enable from member where  member_email=?"
								authorities-by-username-query="select member_email, member_authority from member where  member_email=?"/>
								
	<bean id="roleHierachyAuthoritiesMapper"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
		<constructor-arg>
			<bean class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
				<property name="hierarchy">
					<value>
						ROLE_ADMIN > ROLE_MEMBER
					</value>
				</property>			
			</bean>
		</constructor-arg>
	</bean>
	
	<!-- 로그인 성공했을때와 실패했을때 콜백되는 객체 설정 -->
	<bean id="authSuccessHandler"
	      class="com.mycompany.sabangpalbang.security.AuthSuccessHandler">
	
	</bean>
	
	<bean id="authFailureHandler" 
	      class="com.mycompany.sabangpalbang.security.AuthFailureHandler">
		<property name="defaultFailureUrl" value="/signinForm"/>
	</bean>
	
</beans>
